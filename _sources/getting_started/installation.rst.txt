Installation
================================

Pre-Requisites
^^^^^^^^^^^^^^^^^^^

Before you begin, ensure you have the following tools installed:

* `Git <https://git-scm.com/downloads>`_ (preferably command line version)
* `Python **3.12 or higher** <https://www.python.org/downloads/>`_
* `Visual Studio Code <https://code.visualstudio.com/download>`_

Required VSCode Extensions
**********************************

Install these extensions in Visual Studio Code:

* Jupyter (Microsoft)
* Python (Microsoft)

Development Setup
^^^^^^^^^^^^^^^^^^^^^^^^

1. Clone the Repository - Make sure to do this in your documents folder or wherever you keep your projects.
******************************************************************************************************************

.. code-block:: bash

   git clone https://github.com/Penn-Electric-Racing/SuboptimumG.git

2. Setup Development Environment
**************************************

Run the following commands to setup the development environment:

Note: If you get an error about the python version, you can change the ``python`` to ``python3`` in the commands below.

.. code-block:: bash

   python -m venv .venv

On Mac/Linux:

.. code-block:: bash

   source .venv/bin/activate

On Windows:

.. code-block:: bash

   .venv\Scripts\activate

.. code-block:: bash

   python -m pip install --upgrade pip
   pip install -r requirements.txt
   python -m pip install -e .
   python -m pre_commit install

1. Configure VSCode Environment
*************************************

1. Select the Virtual Environment:

   * Press ``Ctrl + Shift + P``
   * Type "Python: Select Interpreter"
   * Choose the ``.venv`` Python interpreter - make sure that this is Python 3.12 or higher.

2. Configure Jupyter Notebooks:

   * Open your notebook
   * Click the "Kernel" icon (Computer Symbol) in the top right corner
   * Select the ``.venv`` Python environment - make sure that this is Python 3.12 or higher.

.. note::

   The pre-commit hooks will automatically run on all files when you commit changes,
   ensuring consistent code style across the project.
