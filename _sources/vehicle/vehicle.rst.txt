vehicle
=================

.. py:function:: car_weight_distributor(self, backwards_pass=False)

   Calculates the normal forces on each tire by computing and applying longitudinal
   and lateral weight transfer effects.

   :param backwards_pass: Flag to indicate if the calculation is for a backwards pass, which inverts
                         the longitudinal acceleration direction.
   :type backwards_pass: bool
   :default backwards_pass: False

   :returns: *(fl, fr, bl, br)* - A tuple of normal forces (in Newtons) on each tire:

            * fl - front left tire
            * fr - front right tire
            * bl - back left tire
            * br - back right tire

            More positive means more pushed into the ground.
   :rtype: tuple[float, float, float, float]

   .. note::
      The function performs the following steps:

      1. Calculates longitudinal weight transfer based on acceleration/deceleration
      2. Calculates lateral weight transfer for front and rear axles
      3. Computes base static normal forces for each tire
      4. Applies weight transfer effects to determine final normal forces

      The calculation takes into account:

      * Vehicle mass and weight distribution
      * Center of gravity height
      * Wheelbase and track widths
      * Suspension behavior
      * Longitudinal acceleration ``self.acc``. Positive implies acceleration, negative implies deceleration
      * Lateral acceleration ``self.lat_acc``

   .. rubric:: Examples

   .. code-block:: python

      # Calculate normal forces during forward acceleration
      fl, fr, bl, br = car.car_weight_distributor(backwards_pass=False)

      # Calculate normal forces during braking
      fl, fr, bl, br = car.car_weight_distributor(backwards_pass=True)

   .. seealso::
      :func:`longitudinal_weight_transfer`, :func:`lateral_weight_transfer`
